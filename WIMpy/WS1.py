from __future__ import division
import numpy as np

def calcws1(i, j, y, isotope):
   if isotope not in dispatchtable.keys():
       ws1 = 0.
   else:
       ws1 = dispatchtable[isotope](i, j, y)
   return ws1

def Ni59(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.08649218249250377 - 0.387715034818585*y 
                + 0.9892099596517088*y**2 - 1.1756848792937824*y**3 
                + 0.6934432808481844*y**4 - 0.19705069323126004*y**5 
                + 0.021876796229873603*y**6)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.08607472718272348 - 0.3856980051642366*y 
            + 0.9964032425224896*y**2 - 1.1921266495856608*y**3 
            + 0.7049591243447778*y**4 - 0.20035891899288608*y**5 
            + 0.02219004463989551*y**6)/np.exp(2.*y)
    else:
        WS1 = (-0.08628320237149634 + 0.3867052118035124*y 
            - 0.9927545362767581*y**2 + 1.1838159532880108*y**3 
            - 0.6991487702185001*y**4 + 0.19869349677630407*y**5 
            - 0.02203261007020443*y**6)/np.exp(2.*y)
    return WS1


def Al27(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.0618929333172054 - 0.2108475381697648*y 
            + 0.24446620317090406*y**2 - 0.09426815715239213*y**3 
            + 0.02437372743452902*y**4)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.043766720105712115 - 0.1656221156517662*y 
            + 0.22119270508008307*y**2 - 0.10199091700972805*y**3 
            + 0.027747661383265603*y**4)/np.exp(2.*y)
    else:
        WS1 = (0.05204662034191686 - 0.18712976577516616*y 
            + 0.23300730436550043*y**2 - 0.0985081586005909*y**3 
            + 0.025932726182971457*y**4)/np.exp(2.*y)
    return WS1


def N14(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.13453176221442692*(0.7075775996903854 - 1.*y)**2)/np.exp(2.*y)
    else:
        WS1 = 0.
    return WS1

def He3(i,j,y):
    if i == 0 and j == 0:
        WS1 = 0.0795775/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = 0.0795775/np.exp(2.*y)
    else:
        WS1 = -0.0795775/np.exp(2.*y)
    return WS1

def H(i,j,y):
    WS1 = 0.07957747154594766#/np.exp(2.*y)
    return WS1   

def Xe129(i,j,y):
    if i == 0 and j == 0:    
        WS1 = (0.020808872289191243 - 0.13646274750687623*y + 
             0.36821805666884777*y**2 - 0.5255360956521645*y**3 + 
             0.426380506625309*y**4 - 0.19888283928562725*y**5 + 
             0.05256093049853532*y**6 - 0.007362921124572906*y**7 + 
             0.0004447576508398376*y**8 - 
             3.9111225196870595e-6*y**9 + 9.324872435292655e-9*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.018513885042581883 - 0.12378141258326486*y + 
             0.33151263238856177*y**2 - 0.4595787230968264*y**3 + 
             0.35830376879188996*y**4 - 0.1610290190383875*y**5 + 
             0.041462915554454936*y**6 - 0.005751180220212278*y**7 + 
             0.00035166268082252914*y**8 - 
             3.4610263745635837e-6*y**9 + 9.324880933165722e-9*y**10)/np.exp(2.*y)
    else:
        WS1 = (-0.019627864617116512 + 0.1299735688442808*y - 
             0.3493496139848393*y**2 + 0.4916039983714224*y**3 - 
             0.39101463905664985*y**4 + 0.17899534758174646*y**5 - 
             0.046682820272984135*y**6 + 0.00650716109272763*y**7 - 
             0.00039549447332930254*y**8 + 
             3.6860745496702217e-6*y**9 - 9.32487668422822e-9*y**10)/np.exp(2.*y)
    return WS1

def Xe131(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.014707821388042745 - 0.13732537753381133*y + 
             0.47309062668703133*y**2 - 0.7781456806574102*y**3 + 
             0.7126868955838259*y**4 - 0.37244667575862184*y**5 + 
             0.10845443880671564*y**6 - 0.016137538638583637*y**7 + 
             0.0009330377654740855*y**8 + 5.08149166686281e-6*y**9 + 
             7.015771540521167e-9*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.013272091746950735 - 0.12505298374885687*y + 
             0.44292909076165154*y**2 - 0.7661782395006832*y**3 + 
             0.7373288715284319*y**4 - 0.4002496665646047*y**5 + 
             0.11947776284330879*y**6 - 0.0180035776961701*y**7 + 
             0.0010450837366378113*y**8 + 5.380611474527931e-6*y**9 + 
             7.015720311671177e-9*y**10)/np.exp(2.*y)
    else:
        WS1 = (-0.013971526575856616 + 0.13104695249126264*y - 
             0.45776368441557164*y**2 + 0.7724000950817769*y**3 - 
             0.7251181061534898*y**4 + 0.386159363063301*y**5 - 
             0.11383865586358587*y**6 + 0.01704522062905004*y**7 - 
             0.0009874486522898913*y**8 - 5.231052109747236e-6*y**9 - 
             7.015745926048718e-9*y**10)/np.exp(2.*y)
    return WS1


def Ge73(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.1513847329041856 - 0.9583950135082857*y + 
             2.351271397695813*y**2 - 2.517833190328393*y**3 + 
             1.3909846187213037*y**4 - 0.41694105365080003*y**5 + 
             0.06998199362389064*y**6 - 0.006200567348583113*y**7 + 
             0.0003822651574788272*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.14163038401184777 - 0.9161105805718016*y + 
         2.293683294035725*y**2 - 2.4645837045906136*y**3 + 
         1.3604244948448454*y**4 - 0.4074631161715448*y**5 + 
         0.06851659797280203*y**6 - 0.006089789044620567*y**7 + 
         0.00037830626768314737*y**8)/np.exp(2.*y)

    else:
        WS1 = (-0.14642635642107202 + 0.9370683531851077*y - 
         2.321887089235772*y**2 + 2.4902970626762713*y**3 - 
         1.3748886946023349*y**4 + 0.41190110531741825*y**5 - 
         0.06920850155110386*y**6 + 0.006144362380504517*y**7 - 
         0.0003802737453575395*y**8)/np.exp(2.*y)
    return WS1

def Na23(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.02533449331610064 - 0.07508468158600985*y + 
            0.10023471368725768*y**2 - 0.038426096386447325*y**3 + 
            0.004663955930323427*y**4)/np.exp(2.*y)                         
    elif i == 1 and j == 1:
        WS1 = (0.018351549889613978 - 0.056700920580213865*y + 
            0.08877941962963998*y**2 - 0.037469855497495354*y**3 + 
            0.004779553027442553*y**4)/np.exp(2.*y)
    else:
        WS1 = (0.02156217099502072 - 0.0652626624234068*y + 
            0.09414385201445229*y**2 - 0.037951074159910954*y**3 + 
            0.004721378019155326*y**4)/np.exp(2.*y)
    return WS1

def Iodine(i,j,y): 
    if i == 0 and j == 0:
        WS1 = (0.04839480352275678 - 0.3143746918646802*y 
            + 0.9821646958274056*y**2 - 1.5472751812936691*y**3 
            + 1.4166195751157449*y**4 - 0.757734058698637*y**5 
            + 0.22913190506020384*y**6 - 0.036144497729396194*y**7 
            + 0.0024113844285718186*y**8 -0.000016720590524659685*y**9 
            + 4.3915215684208603e-8*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.017563206285232766 - 0.09665918217452349*y 
            + 0.37059400697695377*y**2 - 0.6905847972815203*y**3 
            + 0.740795998119247*y**4 - 0.44690261406330334*y**5 
            + 0.14602851578011075*y**6 - 0.023638024076277523*y**7 
            + 0.00144736301937575*y**8 + 0.00001213159302851343*y**9 
            + 4.3914960280003364e-8*y**10)/np.exp(2.*y)
    else:
        WS1 = (0.029154209257043602 - 0.17491864732393952*y 
            + 0.5879753259482224*y**2 - 1.0036360331092486*y**3 
            + 0.9985588915526017*y**4 - 0.570071562448982*y**5 
            + 0.17976926827979903*y**6 - 0.02874514809610476*y**7 
            + 0.0018304504753788719*y**8 + 2.2944705387043374e-6*y**9 
            - 4.3915087981885553e-8*y**10)/np.exp(2.*y)
    return WS1   

def Fluorine(i,j,y):
    if i == 0 and j == 0:
        WS1 = (0.06923097120091831 - 0.18657909611731946*y 
            + 0.1900795014876835*y**2 - 0.08674032679984771*y**3 
            + 0.014962927188374175*y**4)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WS1 = (0.07449919349213703 - 0.19954335861947162*y 
            + 0.19821779791122368*y**2 - 0.0865149085568593*y**3 
            + 0.014004219906644334*y**4)/np.exp(2.*y)
    else:
        WS1 = (0.07181679134537951 - 0.1929532925236602*y 
            + 0.1941274880726701*y**2 - 0.08667136900466837*y**3 
            + 0.014475638942481928*y**4)/np.exp(2.*y)
    return WS1

dispatchtable = {}
dispatchtable['Ni59'] = Ni59
dispatchtable['Al27'] = Al27
dispatchtable['N14'] =  N14
dispatchtable['He3'] = He3
dispatchtable['H'] = H
dispatchtable['Xe129'] = Xe129
dispatchtable['Xe131'] = Xe131
dispatchtable['Ge73'] = Ge73
dispatchtable['Na23'] = Na23
dispatchtable['I127'] = Iodine
dispatchtable['F19'] = Fluorine
