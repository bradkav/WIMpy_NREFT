from __future__ import division
import numpy as np

def calcwm(i, j, y, isotope):
   if isotope not in dispatchtable.keys():
       wd = 0.
   else:
       wd = dispatchtable[isotope](i, j, y)
   return wd
   
def Ni59(i,j,y):
    if i == 0 and j == 0:
        WM = (277.009129983598 - 732.4308479753286*y 
            + 721.3160159555308*y**2 - 332.68848866908223*y**3 
            + 76.10475552271956*y**4 - 8.219725226179337*y**5 
            + 0.33543918900384256*y**6)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.7161949885553599 - 2.864779954221512*y 
            + 5.010107951530026*y**2 - 4.654426309383234*y**3 
            + 2.3510420143753605*y**4 - 0.5766766987045543*y**5 
            + 0.0535951173286681*y**6)/np.exp(2.*y)
    else:
        WM = (-14.08518905369514 + 46.7914736703806*y 
            - 63.90153596884478*y**2 + 43.57965157084273*y**3 
            - 14.796511383123757*y**4 + 2.3389358389005017*y**5 
            - 0.13323091938208412*y**6)/np.exp(2.*y)
    return WM

def Ni58(i,j,y):
    if i == 0 and j == 0:
        WM = (66.9246 - 175.389*y + 169.877*y**2 - 76.127*y**3 
            + 16.6597*y**4 - 1.6839*y**5 + 0.0628067*y**6)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.0795762 - 0.318305*y + 0.548985*y**2 - 0.503018*y**3  
            + 0.250492*y**4 - 0.0603789*y**5 
            + 0.00545169*y**6)/np.exp(2.*y)
    else:
        WM = (-2.30773 + 7.63937*y - 10.3404*y**2 + 6.95311*y**3 
            - 2.30652*y**4 + 0.350525*y**5 -0.0185041*y**6)/np.exp(2.*y)
    return WM

def Fe56(i,j,y):
    if i == 0 and j == 0:
        WM = (62.388777015508765 - 160.42824560643984*y 
                + 152.6436768887057*y**2 - 67.2779398120723*y**3 
                + 14.478025411058926*y**4 - 1.4366495961973593*y**5 
                + 0.052529136733736465*y**6)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.31830868659112194 - 1.2732347463644877*y 
            + 1.9918832378895788*y**2 - 1.5456167618581302*y**3 
            + 0.6222644086859521*y**4 - 0.12227728761714192*y**5 
            + 0.009215248417080017*y**6)/np.exp(2.*y)
    else:
        WM = (-4.456331413823822 + 14.642230425862513*y 
            - 18.257941019835176*y**2 + 10.891907564433797*y**3 
            - 3.2295985806489713*y**4 + 0.44683638613875426*y**5 
            - 0.022001569128954065*y**6)/np.exp(2.*y)
    return WM

def Ca40(i,j,y):
    if i == 0 and j == 0:
        WM = (0.000016743033908748987*(1378.7968344953244 
            - 1387.5384908543047*y + 281.95298068010493*y**2 
            - 1.*y**3)**2)/np.exp(2.*y)
    else:
        WM = 0. 
    return WM

def Ar40(i,j,y):
    if i == 0 and j == 0:
        WM = (31.82942047318682 - 65.96177301433545*y 
            + 48.58344700506161*y**2 - 15.193970945783072*y**3 
            + 1.9035952169249877*y**4 - 0.05958862082938618*y**5 
            + 0.0005443287364681978*y**6)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.31830397368380947 - 1.0652376196047997*y 
            + 1.2484632661463333*y**2 - 0.6224898839181509*y**3 
            + 0.14161793642799148*y**4 - 0.013879710940695546*y**5 
            + 0.0004805126374568142*y**6)/np.exp(2.*y) 
    else:
        WM = (-3.1829908917036316 + 8.62424562744593*y 
            - 8.025394612628931*y**2 + 3.1931619505667515*y**3 
            - 0.5544673259783914*y**4 + 0.03537969449718757*y**5 
            - 0.0005114262769978376*y**6)/np.exp(2.*y) 
    return WM

def S32(i,j,y):
    if i == 0 and j == 0:
        WM = (0.580304518771385*(5.9249403912693674 
            - 5.4311767953080805*y + 1.*y**2)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM

def Si28(i,j,y):
    if i == 0 and j == 0:
        WM = (0.28169494679919466*(7.4408929931912215 
            - 6.377837355440523*y + 1.*y**2)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM

def Al27(i,j,y):
    if i == 0 and j == 0:
        WM = (87.01458668430054 - 146.0969173747615*y 
            + 83.53672713691884*y**2 - 18.598141659854168*y**3 
            + 1.4344582399866814*y**4)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.11936637441693228 - 0.31831033177848606*y 
            + 0.33729069642027937*y**2 - 0.1325262656678264*y**3 
            + 0.01815501437926362*y**4)/np.exp(2.*y)
    else:
        WM = (-3.222827288871286 + 7.002655937137329*y 
            - 4.927561674517203*y**2 + 1.3358703438729338*y**3 
            - 0.11523996342329276*y**4)/np.exp(2.*y)
    return WM

def Mg24(i,j,y):
    if i == 0 and j == 0:
        WM = (0.12346714503248794*(9.633854943338415 
            - 7.492989850052579*y + 1.*y**2)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM

def Ne20(i,j,y):
    if i == 0 and j == 0:
        WM = (0.04317233854151146*(13.576634514888733 
            - 9.051082784315225*y + 1.*y**2)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM
     
def O16(i,j,y):
    if i == 0 and j == 0:
        WM = (0.000032627961876663305*(395.08421446634475 
            - 200.04237521164006*y + 1.*y**2)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM

def N14(i,j,y):
    if i == 0 and j == 0:
        WM = (11.697894775374504 - 11.14085547491048*y 
            + 2.6757362417126016*y**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM
  
def C12(i,j,y):
    if i == 0 and j == 0:
        WM = (0.5658824249863367*(2.2500012041702315 - 1.*y)**2)/np.exp(2.*y)
    else:
        WM = 0.
    return WM

def He4(i,j,y):
    if i == 0 and j == 0:
        WM = 0.31830988618379064/np.exp(2.*y)
    else:
        WM = 0.
    return WM   

def He3(i,j,y):
    if i == 0 and j == 0:
        WM = 0.358099/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = 0.0397887/np.exp(2.*y) 
    else:
        WM = 0.119366/np.exp(2.*y) 
    return WM    
    
def H(i,j,y):
    WM=0.039788735772973836#/np.exp(2.*y)   
    return WM 

def Xe128(i,j,y):
    if i == 0 and j == 0:
       WM = (325.91917744944726 -
            1276.50654817095*y + 1984.4517393655026*y**2 - 
            1593.6102172793267*y**3 + 728.4499400570496*y**4 - 
            195.9856335406922*y**5 + 30.729211806452064*y**6 - 
            2.635972089409724*y**7 + 0.10404843949629333*y**8 - 
            0.0010369644490000852*y**9 + 3.016262813210672e-6*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (7.955427010079781 - 
            44.55062233246965*y + 98.24146522097337*y**2 - 
            110.75157621097675*y**3 + 70.29034987729817*y**4 - 
            25.996406174342592*y**5 + 5.57148851331134*y**6 - 
            0.6549455540754562*y**7 + 0.03630104495092332*y**8 - 
            0.0006011228389940611*y**9 + 3.0162619877346335e-6*y**10)/np.exp(2.*y)
    else: 
        WM = (-50.91980191815662 + 
            242.29333115810746*y - 451.38668632763245*y**2 + 
            430.6024044335512*y**3 - 231.90257654487112*y**4 + 
            73.03000807436828*y**5 - 13.349952197280741*y**6 + 
            1.3357783993448935*y**7 - 0.062302506644851104*y**8 + 
            0.000819043614177327*y**9 - 3.0162624004726243e-6*y**10)/np.exp(2.*y)
    return WM

def Xe129(i,j,y):
    if i == 0 and j == 0:  
        WM = (662.0513124596586 - 
            2613.9342137308345*y + 4074.4131629265094*y**2 - 
            3261.1016328674827*y**3 + 1479.0514286016964*y**4 - 
            393.955476122716*y**5 + 61.29098990843402*y**6 - 
            5.285420071724846*y**7 + 0.2204141165533251*y**8 - 
            0.0030896641999513196*y**9 + 0.000013570079859195202*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (17.536130437374922 - 
            100.20748951506954*y + 225.19782923598268*y**2 - 
            258.3874453228734*y**3 + 166.79728655909713*y**4 - 
            62.78048194917888*y**5 + 13.737898493339399*y**6 - 
            1.666057605553237*y**7 + 0.09858422510154383*y**8 - 
            0.0020509262978681644*y**9 + 0.000013570084170760142*y**10)/np.exp(2.*y)
    else:
        WM = (-107.7488662192223 + 
            520.5659939390964*y - 981.3968247657095*y**2 + 
            943.9925262179454*y**3 - 511.1341455863224*y**4 + 
            161.6308978143562*y**5 - 29.733249161813323*y**6 + 
            3.026858137682327*y**7 - 0.1495602379414042*y**8 + 
            0.002570295331418228*y**9 - 0.000013570082014977499*y**10)/np.exp(2.*y)
    return WM

def Xe130(i,j,y):
    if i == 0 and j == 0: 
        WM = (336.1724390248572 - 
            1330.8786767158394*y + 2088.090755724339*y**2 - 
            1689.814618008171*y**3 + 777.9884926751116*y**4 - 
            211.06448255880647*y**5 + 33.5219719336856*y**6 - 
            2.9495568817752464*y**7 + 0.1242372843302209*y**8 - 
            0.0016553468792303643*y**9 + 6.785766731805963e-6*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (9.624082154285077 - 
            54.82863485563511*y + 122.66047396055012*y**2 - 
            139.89605114092825*y**3 + 89.70368980365548*y**4 - 
            33.534418618126274*y**5 + 7.2894986567906415*y**6 - 
            0.8780374372876345*y**7 + 0.0514988507107148*y**8 - 
            0.0010502329799669098*y**9 + 6.785769077692495e-6*y**10)/np.exp(2.*y)
    else:
        WM = (-56.880147425807706 + 
            274.6156879311043*y - 517.6455696049135*y**2 + 
            498.5772756927532*y**3 - 270.86090467800295*y**4 + 
            86.11611125387651*y**5 - 15.956156766625776*y**6 + 
            1.6368765473442501*y**7 - 0.08112301189567943*y**8 + 
            0.0013527899818966645*y**9 - 6.785767904749128e-6*y**10)/np.exp(2.*y)
    return WM

def Xe131(i,j,y):
    if i == 0 and j == 0: 
        WM = (1365.516293403943 - 
            5448.07433758639*y + 8574.390459048249*y**2 - 
            6924.353277101737*y**3 + 3169.339230952855*y**4 - 
            853.5888451610646*y**5 + 134.99430546505297*y**6 - 
            11.981310993311826*y**7 + 0.5311082420709478*y**8 - 
            0.008910040822607978*y**9 + 0.00004893187896953263*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (42.07823482867425 - 
            243.93300914672201*y + 554.5051683568771*y**2 - 
            641.6178047805118*y**3 + 417.0881151805384*y**4 - 
            158.1648562541716*y**5 + 34.98658830913017*y**6 - 
            4.326687415401189*y**7 + 0.26718616352575075*y**8 - 
            0.0062981742105538575*y**9 + 0.00004893185064701238*y**10)/np.exp(2.*y)
    else:
        WM = (-239.70505888744214 + 
            1172.98285743313*y - 2234.115178095732*y**2 + 
            2167.058196857248*y**3 - 1182.666943825394*y**4 + 
            377.43146404050896*y**5 - 70.37345142511599*y**6 + 
            7.337788786659622*y**7 - 0.381711238796112*y**8 + 
            0.007604107139583628*y**9 - 0.00004893186480827043*y**10)/np.exp(2.*y)
    return WM

def Xe132(i,j,y):
    if i == 0 and j == 0: 
        WM = (346.6240402968277 - 
            1386.4837350706744*y + 2195.2533073934565*y**2 - 
            1790.810710354073*y**3 + 830.8918935565413*y**4 - 
            227.44015305418753*y**5 + 36.595142410123906*y**6 - 
            3.296816025359471*y**7 + 0.14659921902826684*y**8 - 
            0.002348294149691664*y**9 + 0.000012063984104347794*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (11.45649049509185 - 
            66.19323610952118*y + 149.71114302799523*y**2 - 
            172.06828758214093*y**3 + 111.01188787619299*y**4 - 
            41.76887024543622*y**5 + 9.165451610630237*y**6 - 
            1.1237257697209542*y**7 + 0.06867238002127685*y**8 - 
            0.001591310553873739*y**9 + 0.000012063983920449166*y**10)/np.exp(2.*y)
    else:
       WM = (-63.01662497334288 + 
          308.08064292133855*y - 586.3971820949942*y**2 + 
          569.1129482908916*y**3 - 311.305097143077*y**4 + 
          99.7399437810435*y**5 - 18.689471281124614*y**6 + 
          1.9572913603810922*y**7 - 0.10169845591019486*y**8 + 
          0.0019698023488979115*y**9 - 0.00001206398401239848*y**10)/np.exp(2.*y)
    return WM

def Xe134(i,j,y):
    if i == 0 and j == 0: 
        WM = (357.14940205207637 - 
            1447.875053815059*y + 2310.530064820594*y**2 - 
            1888.2601276926487*y**3 + 874.1746584104613*y**4 - 
            238.56613736244603*y**5 + 38.46935221090936*y**6 - 
            3.5369915132226897*y**7 + 0.16926477631015527*y**8 - 
            0.0034715055289740405*y**9 + 0.00002466424268052468*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (13.435047170827318 - 
            79.33279318911957*y + 182.63659397218524*y**2 - 
            212.76328726283984*y**3 + 138.8369477789454*y**4 - 
            52.84498292586959*y**5 + 11.77064179750136*y**6 - 
            1.4798574039535166*y**7 + 0.0954457557866559*y**8 - 
            0.002558900020389506*y**9 + 0.00002339737814666577*y**10)/np.exp(2.*y)
    else:
        WM = (-69.26990012698448 + 
            344.9256402021955*y - 665.230536716715*y**2 + 
            650.9521389751175*y**3 - 357.88433742672066*y**4 + 
            115.17190105519988*y**5 - 21.75599692273277*y**6 + 
            2.32742917236752*y**7 - 0.12847047458989133*y**8 + 
            0.0030042188677877352*y**9 - 0.000024022460587903342*y**10)/np.exp(2.*y)
    return WM

def Xe136(i,j,y):
    if i == 0 and j == 0: 
        WM = (367.96567413977306 - 
            1501.2623249014373*y + 2415.3931555432596*y**2 - 
            1994.5479862487596*y**3 + 934.9506789209383*y**4 - 
            258.8508822831106*y**5 + 42.41190076034266*y**6 - 
            3.9639487609825776*y**7 + 0.19223998523547217*y**8 - 
            0.0039439153848192824*y**9 + 0.000027829597283496683*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (15.597112953911047 - 
            91.98609067553075*y + 212.0624063068352*y**2 - 
            248.05271445939803*y**3 + 162.73131225481504*y**4 - 
            62.27774855838847*y**5 + 13.936507363606346*y**6 - 
            1.7566632569246108*y**7 + 0.11297323045513075*y**8 - 
            0.002972955344062032*y**9 + 0.000026475337573894588*y**10)/np.exp(2.*y)
    else: 
        WM = (-75.75752228472138 + 
            377.93660744757113*y - 732.3630441055881*y**2 + 
            721.7391590603285*y**3 - 400.22489619954735*y**4 + 
            130.03504953915692*y**5 - 24.81164332771452*y**6 + 
            2.6794948102985083*y**7 - 0.14872761430855477*y**8 + 
            0.003447400582383077*y**9 - 0.00002714402296318868*y**10)/np.exp(2.*y)
    return WM

def Ge70(i,j,y):
    if i == 0 and j == 0: 
        WM = (97.43901858328331 - 
           280.96884210780064*y + 307.0797008874643*y**2 - 
           161.49253547632435*y**3 + 43.64315434606737*y**4 - 
           5.877032852745851*y**5 + 0.3334764199211528*y**6 - 
           0.0036473157269272544*y**7 + 0.000011156219115261747*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.7135382911521365 - 
            3.0579030466741006*y + 4.968185448270196*y**2 - 
            3.8915128122096916*y**3 + 1.5781160710194078*y**4 - 
            0.3264253729018703*y**5 + 0.030919314769796407*y**6 - 
            0.0009643953789455854*y**7 + 9.381587277483851e-6*y**8)/np.exp(2.*y)
    else:
        WM = (-8.338253462893594 + 
            29.88881913181699*y - 40.11884571647641*y**2 + 
            25.85263915524732*y**3 - 8.564798187319978*y**4 + 
            1.4300356729660806*y**5 - 0.10551833758613821*y**6 + 
            0.002198164100524073*y**7 - 0.000010230495751260627*y**8)/np.exp(2.*y)
    return WM

def Ge72(i,j,y):
    if i == 0 and j == 0: 
        WM = (103.12612235890246 - 
            298.95973783730307*y + 331.7246400763252*y**2 - 
            179.12885586050047*y**3 + 50.029505247312386*y**4 - 
            6.931787363367396*y**5 + 0.3849645147615718*y**6 - 
            0.0015875051209515458*y**7 + 1.7019745402803562e-6*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (1.2727170238658878 - 
            5.152584465222651*y + 7.833967573734852*y**2 - 
            5.661721956025656*y**3 + 2.0783411126177054*y**4 - 
            0.3739636407522184*y**5 + 0.027124728725729727*y**6 - 
            0.00022191507606288453*y**7 + 4.82578274801601e-7*y**8)/np.exp(2.*y)
    else:
        WM = (-11.456455452340036 
            + 39.79665471639824*y - 51.79262794036715*y**2 + 
            32.33047236396136*y**3 - 10.32442404968154*y**4 + 
            1.6242451932587962*y**5 - 0.10263060389487526*y**6 + 
            0.0006310381532129546*y**7 - 9.062758616474026e-7*y**8)/np.exp(2.*y)
    return WM

def Ge73(i,j,y):
    if i == 0 and j == 0: 
        WM = (1059.9984768015083 - 
            3110.691386198712*y + 3488.2065425526675*y**2 - 
            1901.6522220682184*y**3 + 538.0027488620511*y**4 - 
            76.59777156677204*y**5 + 4.640236050299174*y**6 - 
            0.05559197080463813*y**7 + 0.0002664666814177836*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (16.097628126297593 - 
            67.84497193379951*y + 108.20817383880527*y**2 - 
            82.97170323947896*y**3 + 32.81941831390369*y**4 - 
            6.5693845340877886*y**5 + 0.5897525593821149*y**6 - 
            0.016134491711799752*y**7 + 0.00022414740150650264*y**8)/np.exp(2.*y)
    else:
        WM = (-130.62718436065458 + 
            466.9407851675181*y - 627.0539550143437*y**2 + 
            405.70417899671867*y**3 - 135.4088271510022*y**4 + 
            22.792050135257526*y**5 - 1.683808139946605*y**6 + 
            0.03354945772954588*y**7 - 0.00024381979068201202*y**8)/np.exp(2.*y)
    return WM

def Ge74(i,j,y):
    if i == 0 and j == 0: 
        WM = (108.90027213248975 - 
            323.57793823110393*y + 366.22709796539385*y**2 - 
            200.97728898554817*y**3 + 57.2924145781395*y**4 - 
            8.298929665854477*y**5 + 0.5331903594912818*y**6 - 
            0.009343970989624863*y**7 + 0.00004860192450703234*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (1.9848881662359417 - 
            8.67538120984859*y + 14.413391512940082*y**2 - 
            11.58731625440829*y**3 + 4.84364124818699*y**4 - 
            1.0411053669758854*y**5 + 0.10480438615034152*y**6 - 
            0.0037885556718445807*y**7 + 0.00004398616462192064*y**8)/np.exp(2.*y)
    else:
        WM = (-14.702206006435004 + 
            53.972083997494146*y - 74.50304411045484*y**2 + 
            49.639673755260226*y**3 - 17.130254673335727*y**4 + 
            3.0201913874464092*y**5 - 0.24361130762484395*y**6 + 
            0.006435789654944067*y**7 - 0.00004623648183316377*y**8)/np.exp(2.*y)
    return WM

def Ge76(i,j,y):
    if i == 0 and j == 0: 
        WM = (114.84250951391134 - 
            348.4214041514677*y + 402.56862886971214*y**2 - 
            225.82417207428924*y**3 + 66.20802425946265*y**4 - 
            10.036808007526718*y**5 + 0.7119515703365928*y**6 - 
            0.017678888760929084*y**7 + 0.0001396692245663162*y**8)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (2.8559560199080845 - 
            12.962058980352593*y + 22.208181633086564*y**2 - 
            18.294190121234294*y**3 + 7.852102756903701*y**4 - 
            1.7599206012452284*y**5 + 0.19308677085912337*y**6 - 
            0.00870447604347527*y**7 + 0.00013359576196805535*y**8)/np.exp(2.*y)
    else:
        WM = (-18.110360470946112 + 
            68.57046253736134*y - 97.03042833438242*y**2 + 
            66.12171104190928*y**3 - 23.453332886550825*y**4 + 
            4.322801057130844*y**5 - 0.3824469500070588*y**6 + 
            0.013095186551368621*y**7 - 0.00013659874259825544*y**8)/np.exp(2.*y)
    return WM

def Na23(i,j,y):
    if i == 0 and j == 0:
        WM = (42.09647961669891 - 
        63.449764993783965*y + 32.59132960909621*y**2 - 
        6.578783535849091*y**3 + 0.48316606974351767*y**4)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.0795775779268156 - 
        0.21220687447151282*y + 0.18294073140422737*y**2 - 
        0.05438917569436889*y**3 + 0.005230123402896642*y**4)/np.exp(2.*y)
    else: 
        WM = (-1.830283007390508 + 
        3.819721028793027*y - 2.504451490051804*y**2 + 
        0.59782183594923*y**3 - 0.04545001570392015*y**4)/np.exp(2.*y)
    return WM   

def Iodine(i,j,y):
    if i == 0 and j == 0:
        WM = (1925.2494842126675 - 7519.078481114949*y 
            + 11648.410583805626*y**2 - 9314.590118245014*y**3 
            + 4236.902252245981*y**4 - 1133.778161610257*y**5 
            + 176.79003093943416*y**6 - 15.092200550896152*y**7 
            + 0.5948961123970716*y**8 - 0.0060707550194427345*y**9 
            + 0.000018233156754955732*y**10)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (52.63920342374225 - 294.1112093604512*y 
            + 647.863383290584*y**2 - 730.4195801457761*y**3 
            + 463.8674193476708*y**4 - 171.6438541197904*y**5 
            + 36.767480872805706*y**6 - 4.30944796212767*y**7 
            + 0.23668669649648358*y**8 - 0.0037711991862009724*y**9 
            + 0.000018233156078074516*y**10)/np.exp(2.*y)
    else:
        WM = (-318.3450945765076 + 1510.9950997182093*y
            - 2809.4441657908196*y**2 + 2675.2989649959773*y**3
            - 1437.8610157961534*y**4 + 451.62233180549606*y**5
            - 82.2661920200775*y**6 + 8.191912374460513*y**7
            - 0.3794381364062421*y**8 + 0.0049209770808634435*y**9
            - 0.000018233156416515106*y**10)/np.exp(2.*y)
    return WM

def Fluorine(i,j,y):
    if i == 0 and j == 0:
        WM = (14.363733170209443 - 18.143662710932404*y 
            + 7.680178151163181*y**2 - 1.231958212516525*y**3 
            + 0.06622307687784938*y**4)/np.exp(2.*y)
    elif i == 1 and j == 1:
        WM = (0.03978871006750586 - 0.10610322684668154*y 
            + 0.1037287631587678*y**2 - 0.043991038125750906*y**3 
            + 0.006839606200823759*y**4)/np.exp(2.*y)
    else:
        WM = (-0.7559857238046755 + 1.4854456263992484*y 
            - 1.001387368567627*y**2 + 0.26640183260006917*y**3 
            - 0.02128238161605433*y**4)/np.exp(2.*y)
    return WM

dispatchtable = {}
dispatchtable['Ni59'] = Ni59
dispatchtable['Ni58'] = Ni58
dispatchtable['Fe56'] = Fe56
dispatchtable['Ca40'] = Ca40
dispatchtable['Ar40'] = Ar40
dispatchtable['S32'] = S32
dispatchtable['Si28'] = Si28
dispatchtable['Al27'] = Al27
dispatchtable['Mg24'] = Mg24
dispatchtable['Ne20'] = Ne20
dispatchtable['O16'] = O16
dispatchtable['N14'] = N14
dispatchtable['C12'] = C12
dispatchtable['He4'] = He4
dispatchtable['He3'] = He3
dispatchtable['H'] = H
dispatchtable['Xe128'] = Xe128
dispatchtable['Xe129'] = Xe129
dispatchtable['Xe130'] = Xe130
dispatchtable['Xe131'] = Xe131
dispatchtable['Xe132'] = Xe132
dispatchtable['Xe134'] = Xe134
dispatchtable['Xe136'] = Xe136
dispatchtable['Ge70'] = Ge70
dispatchtable['Ge72'] = Ge72
dispatchtable['Ge73'] = Ge73
dispatchtable['Ge74'] = Ge74
dispatchtable['Ge76'] = Ge76
dispatchtable['Na23'] = Na23
dispatchtable['I127'] = Iodine
dispatchtable['F19'] = Fluorine
